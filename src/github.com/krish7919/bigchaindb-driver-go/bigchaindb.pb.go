// Code generated by protoc-gen-go.
// source: src/github.com/krish7919/bigchaindb-driver-go/bigchaindb.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	src/github.com/krish7919/bigchaindb-driver-go/bigchaindb.proto

It has these top-level messages:
	Transaction
	TxSchemaZeroNine
	TxSchemaZeroEight
	Input
	Output
	OutputCondition
	OutputConditionDetails
	Asset
	Metadata
	Keypair
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OperationType int32

const (
	// option allow_alias = true;
	OperationType_CREATE   OperationType = 0
	OperationType_TRANSFER OperationType = 1
)

var OperationType_name = map[int32]string{
	0: "CREATE",
	1: "TRANSFER",
}
var OperationType_value = map[string]int32{
	"CREATE":   0,
	"TRANSFER": 1,
}

func (x OperationType) String() string {
	return proto.EnumName(OperationType_name, int32(x))
}
func (OperationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type OutputConditionDetailsType int32

const (
	// option allow_alias = true;
	OutputConditionDetailsType_FULFILLMENT OutputConditionDetailsType = 0
)

var OutputConditionDetailsType_name = map[int32]string{
	0: "FULFILLMENT",
}
var OutputConditionDetailsType_value = map[string]int32{
	"FULFILLMENT": 0,
}

func (x OutputConditionDetailsType) String() string {
	return proto.EnumName(OutputConditionDetailsType_name, int32(x))
}
func (OutputConditionDetailsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CryptoConditionsType int32

const (
	CryptoConditionsType_PREIMAGE_SHA256  CryptoConditionsType = 0
	CryptoConditionsType_RSA_SHA256       CryptoConditionsType = 1
	CryptoConditionsType_PREFIX_SHA256    CryptoConditionsType = 2
	CryptoConditionsType_THRESHOLD_SHA256 CryptoConditionsType = 3
	CryptoConditionsType_ED25519          CryptoConditionsType = 4
)

var CryptoConditionsType_name = map[int32]string{
	0: "PREIMAGE_SHA256",
	1: "RSA_SHA256",
	2: "PREFIX_SHA256",
	3: "THRESHOLD_SHA256",
	4: "ED25519",
}
var CryptoConditionsType_value = map[string]int32{
	"PREIMAGE_SHA256":  0,
	"RSA_SHA256":       1,
	"PREFIX_SHA256":    2,
	"THRESHOLD_SHA256": 3,
	"ED25519":          4,
}

func (x CryptoConditionsType) String() string {
	return proto.EnumName(CryptoConditionsType_name, int32(x))
}
func (CryptoConditionsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Transaction struct {
	Version int32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	// Types that are valid to be assigned to Transaction:
	//	*Transaction_TxZeroNine
	Transaction isTransaction_Transaction `protobuf_oneof:"transaction"`
}

func (m *Transaction) Reset()                    { *m = Transaction{} }
func (m *Transaction) String() string            { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()               {}
func (*Transaction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isTransaction_Transaction interface {
	isTransaction_Transaction()
}

type Transaction_TxZeroNine struct {
	TxZeroNine *TxSchemaZeroNine `protobuf:"bytes,2,opt,name=txZeroNine,oneof"`
}

func (*Transaction_TxZeroNine) isTransaction_Transaction() {}

func (m *Transaction) GetTransaction() isTransaction_Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *Transaction) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Transaction) GetTxZeroNine() *TxSchemaZeroNine {
	if x, ok := m.GetTransaction().(*Transaction_TxZeroNine); ok {
		return x.TxZeroNine
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Transaction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Transaction_OneofMarshaler, _Transaction_OneofUnmarshaler, _Transaction_OneofSizer, []interface{}{
		(*Transaction_TxZeroNine)(nil),
	}
}

func _Transaction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Transaction)
	// transaction
	switch x := m.Transaction.(type) {
	case *Transaction_TxZeroNine:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TxZeroNine); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Transaction.Transaction has unexpected type %T", x)
	}
	return nil
}

func _Transaction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Transaction)
	switch tag {
	case 2: // transaction.txZeroNine
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TxSchemaZeroNine)
		err := b.DecodeMessage(msg)
		m.Transaction = &Transaction_TxZeroNine{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Transaction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Transaction)
	// transaction
	switch x := m.Transaction.(type) {
	case *Transaction_TxZeroNine:
		s := proto.Size(x.TxZeroNine)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TxSchemaZeroNine struct {
	Asset     *Asset        `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Id        string        `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Inputs    []*Input      `protobuf:"bytes,3,rep,name=inputs" json:"inputs,omitempty"`
	Metadata  *Metadata     `protobuf:"bytes,4,opt,name=metadata" json:"metadata,omitempty"`
	Operation OperationType `protobuf:"varint,5,opt,name=operation,enum=OperationType" json:"operation,omitempty"`
	Outputs   []*Output     `protobuf:"bytes,6,rep,name=outputs" json:"outputs,omitempty"`
}

func (m *TxSchemaZeroNine) Reset()                    { *m = TxSchemaZeroNine{} }
func (m *TxSchemaZeroNine) String() string            { return proto.CompactTextString(m) }
func (*TxSchemaZeroNine) ProtoMessage()               {}
func (*TxSchemaZeroNine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TxSchemaZeroNine) GetAsset() *Asset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *TxSchemaZeroNine) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TxSchemaZeroNine) GetInputs() []*Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *TxSchemaZeroNine) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TxSchemaZeroNine) GetOperation() OperationType {
	if m != nil {
		return m.Operation
	}
	return OperationType_CREATE
}

func (m *TxSchemaZeroNine) GetOutputs() []*Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type TxSchemaZeroEight struct {
	Placeholder string `protobuf:"bytes,1,opt,name=placeholder" json:"placeholder,omitempty"`
}

func (m *TxSchemaZeroEight) Reset()                    { *m = TxSchemaZeroEight{} }
func (m *TxSchemaZeroEight) String() string            { return proto.CompactTextString(m) }
func (*TxSchemaZeroEight) ProtoMessage()               {}
func (*TxSchemaZeroEight) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TxSchemaZeroEight) GetPlaceholder() string {
	if m != nil {
		return m.Placeholder
	}
	return ""
}

type Input struct {
	Fulfillment  *OutputCondition `protobuf:"bytes,1,opt,name=fulfillment" json:"fulfillment,omitempty"`
	Fulfills     *Output          `protobuf:"bytes,2,opt,name=fulfills" json:"fulfills,omitempty"`
	OwnersBefore []string         `protobuf:"bytes,3,rep,name=owners_before" json:"owners_before,omitempty"`
}

func (m *Input) Reset()                    { *m = Input{} }
func (m *Input) String() string            { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()               {}
func (*Input) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Input) GetFulfillment() *OutputCondition {
	if m != nil {
		return m.Fulfillment
	}
	return nil
}

func (m *Input) GetFulfills() *Output {
	if m != nil {
		return m.Fulfills
	}
	return nil
}

func (m *Input) GetOwnersBefore() []string {
	if m != nil {
		return m.OwnersBefore
	}
	return nil
}

type Output struct {
	Amount     int32            `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Condition  *OutputCondition `protobuf:"bytes,2,opt,name=condition,json=cond\tition" json:"condition,omitempty"`
	PublicKeys []string         `protobuf:"bytes,3,rep,name=public_keys" json:"public_keys,omitempty"`
}

func (m *Output) Reset()                    { *m = Output{} }
func (m *Output) String() string            { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()               {}
func (*Output) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Output) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Output) GetCondition() *OutputCondition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Output) GetPublicKeys() []string {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

type OutputCondition struct {
	Details *OutputConditionDetails `protobuf:"bytes,1,opt,name=details" json:"details,omitempty"`
	Uri     string                  `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
}

func (m *OutputCondition) Reset()                    { *m = OutputCondition{} }
func (m *OutputCondition) String() string            { return proto.CompactTextString(m) }
func (*OutputCondition) ProtoMessage()               {}
func (*OutputCondition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OutputCondition) GetDetails() *OutputConditionDetails {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *OutputCondition) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type OutputConditionDetails struct {
	Bitmask   int32                      `protobuf:"varint,1,opt,name=bitmask" json:"bitmask,omitempty"`
	PublicKey string                     `protobuf:"bytes,2,opt,name=public_key" json:"public_key,omitempty"`
	Signature string                     `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	Type      OutputConditionDetailsType `protobuf:"varint,4,opt,name=type,enum=OutputConditionDetailsType" json:"type,omitempty"`
	TypeId    CryptoConditionsType       `protobuf:"varint,5,opt,name=type_id,enum=CryptoConditionsType" json:"type_id,omitempty"`
}

func (m *OutputConditionDetails) Reset()                    { *m = OutputConditionDetails{} }
func (m *OutputConditionDetails) String() string            { return proto.CompactTextString(m) }
func (*OutputConditionDetails) ProtoMessage()               {}
func (*OutputConditionDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *OutputConditionDetails) GetBitmask() int32 {
	if m != nil {
		return m.Bitmask
	}
	return 0
}

func (m *OutputConditionDetails) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *OutputConditionDetails) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *OutputConditionDetails) GetType() OutputConditionDetailsType {
	if m != nil {
		return m.Type
	}
	return OutputConditionDetailsType_FULFILLMENT
}

func (m *OutputConditionDetails) GetTypeId() CryptoConditionsType {
	if m != nil {
		return m.TypeId
	}
	return CryptoConditionsType_PREIMAGE_SHA256
}

type Asset struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Asset) Reset()                    { *m = Asset{} }
func (m *Asset) String() string            { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()               {}
func (*Asset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Asset) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Metadata struct {
	Metadata map[string]string `protobuf:"bytes,1,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Metadata) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Keypair struct {
	PublicKey  string `protobuf:"bytes,1,opt,name=public_key" json:"public_key,omitempty"`
	PrivateKey string `protobuf:"bytes,2,opt,name=private_key" json:"private_key,omitempty"`
}

func (m *Keypair) Reset()                    { *m = Keypair{} }
func (m *Keypair) String() string            { return proto.CompactTextString(m) }
func (*Keypair) ProtoMessage()               {}
func (*Keypair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Keypair) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *Keypair) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func init() {
	proto.RegisterType((*Transaction)(nil), "Transaction")
	proto.RegisterType((*TxSchemaZeroNine)(nil), "TxSchemaZeroNine")
	proto.RegisterType((*TxSchemaZeroEight)(nil), "TxSchemaZeroEight")
	proto.RegisterType((*Input)(nil), "Input")
	proto.RegisterType((*Output)(nil), "Output")
	proto.RegisterType((*OutputCondition)(nil), "OutputCondition")
	proto.RegisterType((*OutputConditionDetails)(nil), "OutputConditionDetails")
	proto.RegisterType((*Asset)(nil), "Asset")
	proto.RegisterType((*Metadata)(nil), "Metadata")
	proto.RegisterType((*Keypair)(nil), "Keypair")
	proto.RegisterEnum("OperationType", OperationType_name, OperationType_value)
	proto.RegisterEnum("OutputConditionDetailsType", OutputConditionDetailsType_name, OutputConditionDetailsType_value)
	proto.RegisterEnum("CryptoConditionsType", CryptoConditionsType_name, CryptoConditionsType_value)
}

func init() {
	proto.RegisterFile("src/github.com/krish7919/bigchaindb-driver-go/bigchaindb.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 764 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x54, 0xdf, 0x6f, 0xe2, 0x46,
	0x10, 0x8e, 0x09, 0x98, 0x78, 0x5c, 0x88, 0x33, 0x4d, 0xef, 0xd0, 0xdd, 0xe9, 0x44, 0xdd, 0x56,
	0x4a, 0xa3, 0xc6, 0x28, 0x44, 0x69, 0x9b, 0x56, 0xaa, 0xc4, 0x25, 0x4e, 0x13, 0x5d, 0x7e, 0x9c,
	0x16, 0x5a, 0x55, 0xf7, 0x82, 0x16, 0x7b, 0x03, 0x2b, 0x8c, 0xed, 0xae, 0xd7, 0xf4, 0x90, 0xfa,
	0xdc, 0x3f, 0xb0, 0x4f, 0xfd, 0x73, 0x2a, 0x2f, 0x36, 0x38, 0xdc, 0xe5, 0x89, 0x99, 0x6f, 0x66,
	0xf7, 0x9b, 0xfd, 0xf8, 0xc6, 0xf0, 0x4b, 0x22, 0xbc, 0xce, 0x98, 0xcb, 0x49, 0x3a, 0x72, 0xbc,
	0x68, 0xd6, 0x99, 0x0a, 0x9e, 0x4c, 0x7e, 0x38, 0x3b, 0x3e, 0xeb, 0x8c, 0xf8, 0xd8, 0x9b, 0x50,
	0x1e, 0xfa, 0xa3, 0x23, 0x5f, 0xf0, 0x39, 0x13, 0x47, 0xe3, 0xa8, 0x04, 0x3a, 0xb1, 0x88, 0x64,
	0x64, 0x4f, 0xc1, 0x1c, 0x08, 0x1a, 0x26, 0xd4, 0x93, 0x3c, 0x0a, 0xb1, 0x05, 0xf5, 0x39, 0x13,
	0x09, 0x8f, 0xc2, 0x96, 0xd6, 0xd6, 0x0e, 0x6a, 0xa4, 0x48, 0xf1, 0x04, 0x40, 0x7e, 0x78, 0xcf,
	0x44, 0x74, 0xc7, 0x43, 0xd6, 0xaa, 0xb4, 0xb5, 0x03, 0xb3, 0xbb, 0xe7, 0x0c, 0x3e, 0xf4, 0xbd,
	0x09, 0x9b, 0xd1, 0xa2, 0x70, 0xb5, 0x45, 0x4a, 0x6d, 0x6f, 0x1a, 0x60, 0xca, 0xf5, 0xed, 0xf6,
	0x7f, 0x1a, 0x58, 0x9b, 0x27, 0xf0, 0x15, 0xd4, 0x68, 0x92, 0x30, 0xa9, 0x08, 0xcd, 0xae, 0xee,
	0xf4, 0xb2, 0x8c, 0x2c, 0x41, 0x6c, 0x42, 0x85, 0xfb, 0x8a, 0xce, 0x20, 0x15, 0xee, 0xe3, 0x6b,
	0xd0, 0x79, 0x18, 0xa7, 0x32, 0x69, 0x6d, 0xb7, 0xb7, 0x55, 0xfb, 0x75, 0x96, 0x92, 0x1c, 0xc5,
	0x6f, 0x60, 0x67, 0xc6, 0x24, 0xf5, 0xa9, 0xa4, 0xad, 0xaa, 0xba, 0xd0, 0x70, 0x6e, 0x73, 0x80,
	0xac, 0x4a, 0xf8, 0x1d, 0x18, 0x51, 0xcc, 0x04, 0xcd, 0xc6, 0x6a, 0xd5, 0xda, 0xda, 0x41, 0xb3,
	0xdb, 0x74, 0xee, 0x0b, 0x64, 0xb0, 0x88, 0x19, 0x59, 0x37, 0xe0, 0x97, 0x50, 0x8f, 0x52, 0xa9,
	0x58, 0x75, 0xc5, 0x5a, 0x77, 0xee, 0x55, 0x4e, 0x0a, 0xdc, 0x3e, 0x85, 0xbd, 0xf2, 0xcb, 0x5c,
	0x3e, 0x9e, 0x48, 0x6c, 0x83, 0x19, 0x07, 0xd4, 0x63, 0x93, 0x28, 0xf0, 0x99, 0x50, 0x0f, 0x34,
	0x48, 0x19, 0xb2, 0xff, 0xd1, 0xa0, 0xa6, 0x1e, 0x80, 0x5d, 0x30, 0x1f, 0xd2, 0xe0, 0x81, 0x07,
	0xc1, 0x8c, 0x85, 0x85, 0x18, 0x56, 0xce, 0x73, 0x1e, 0x85, 0x3e, 0xcf, 0x46, 0x21, 0xe5, 0x26,
	0xfc, 0x0a, 0x76, 0xf2, 0x34, 0xc9, 0xff, 0x91, 0xd5, 0x60, 0xab, 0x02, 0x7e, 0x0d, 0x8d, 0xe8,
	0xaf, 0x90, 0x89, 0x64, 0x38, 0x62, 0x0f, 0x91, 0x60, 0x4a, 0x38, 0x83, 0x3c, 0x06, 0xed, 0x04,
	0xf4, 0xe5, 0x49, 0x7c, 0x06, 0x3a, 0x9d, 0x45, 0x69, 0x3e, 0x43, 0x8d, 0xe4, 0x19, 0x76, 0xc0,
	0xf0, 0x8a, 0x31, 0x72, 0xb6, 0x8f, 0xc7, 0x83, 0xac, 0xc5, 0x50, 0xb1, 0x7a, 0x7d, 0x3a, 0x0a,
	0xb8, 0x37, 0x9c, 0xb2, 0x45, 0x92, 0xd3, 0x96, 0x21, 0xfb, 0x77, 0xd8, 0xdd, 0xb8, 0x00, 0x8f,
	0xa1, 0xee, 0x33, 0x49, 0x79, 0x90, 0xe4, 0x12, 0x3c, 0xdf, 0xe4, 0xb8, 0x58, 0x96, 0x49, 0xd1,
	0x87, 0x16, 0x6c, 0xa7, 0x82, 0xe7, 0x1e, 0xc9, 0x42, 0xfb, 0x5f, 0x0d, 0x9e, 0x7d, 0xfa, 0x54,
	0x66, 0xf0, 0x11, 0x97, 0x33, 0x9a, 0x4c, 0x0b, 0x83, 0xe7, 0x29, 0xbe, 0x06, 0x58, 0xcf, 0x96,
	0xdf, 0x56, 0x42, 0xf0, 0x15, 0x18, 0x09, 0x1f, 0x87, 0x54, 0xa6, 0x4a, 0xc3, 0xac, 0xbc, 0x06,
	0xb0, 0x03, 0x55, 0xb9, 0x88, 0x99, 0xf2, 0x5c, 0xb3, 0xfb, 0xf2, 0x89, 0xa1, 0x95, 0xb1, 0x54,
	0x23, 0x76, 0xa0, 0x9e, 0xfd, 0x0e, 0xb9, 0x9f, 0xfb, 0xef, 0x0b, 0xe7, 0x5c, 0x2c, 0x62, 0x19,
	0xad, 0xce, 0x2c, 0xbb, 0x8b, 0x2e, 0xfb, 0x25, 0xd4, 0xd4, 0x66, 0x20, 0x42, 0x55, 0xd9, 0x7b,
	0x69, 0x27, 0x15, 0xdb, 0x7f, 0xc3, 0x4e, 0xe1, 0x72, 0x3c, 0x29, 0xad, 0x80, 0xa6, 0xec, 0xfa,
	0x7c, 0xb5, 0x02, 0xab, 0xc0, 0x0d, 0xa5, 0x58, 0xac, 0x17, 0xe2, 0xc5, 0xcf, 0xd0, 0x78, 0x54,
	0xca, 0x54, 0xcd, 0x74, 0x58, 0x92, 0x64, 0x21, 0xee, 0x43, 0x6d, 0x4e, 0x83, 0x94, 0xe5, 0xda,
	0x2c, 0x93, 0x9f, 0x2a, 0x3f, 0x6a, 0xf6, 0x5b, 0xa8, 0xbf, 0x65, 0x8b, 0x98, 0x72, 0xb1, 0xa1,
	0xa2, 0xf6, 0x91, 0x8a, 0x99, 0x29, 0x04, 0x9f, 0x53, 0xc9, 0x4a, 0x32, 0x97, 0xa1, 0xc3, 0x6f,
	0xa1, 0xf1, 0x68, 0x11, 0x11, 0x40, 0x3f, 0x27, 0x6e, 0x6f, 0xe0, 0x5a, 0x5b, 0xf8, 0x19, 0xec,
	0x0c, 0x48, 0xef, 0xae, 0x7f, 0xe9, 0x12, 0x4b, 0x3b, 0x3c, 0x82, 0x17, 0x4f, 0xeb, 0x8c, 0xbb,
	0x60, 0x5e, 0xfe, 0x76, 0x73, 0x79, 0x7d, 0x73, 0x73, 0xeb, 0xde, 0x0d, 0xac, 0xad, 0xc3, 0x3f,
	0x61, 0xff, 0x53, 0x12, 0xe3, 0xe7, 0xb0, 0xfb, 0x8e, 0xb8, 0xd7, 0xb7, 0xbd, 0x5f, 0xdd, 0x61,
	0xff, 0xaa, 0xd7, 0x3d, 0xfd, 0xde, 0xda, 0xc2, 0x26, 0x00, 0xe9, 0xf7, 0x8a, 0x5c, 0xc3, 0x3d,
	0x68, 0xbc, 0x23, 0xee, 0xe5, 0xf5, 0x1f, 0x05, 0x54, 0xc1, 0x7d, 0xb0, 0x06, 0x57, 0xc4, 0xed,
	0x5f, 0xdd, 0xdf, 0x5c, 0x14, 0xe8, 0x36, 0x9a, 0x50, 0x77, 0x2f, 0xba, 0xa7, 0xa7, 0xc7, 0x67,
	0x56, 0xf5, 0x8d, 0xfe, 0xbe, 0x3a, 0xa3, 0x3c, 0x1c, 0xe9, 0xea, 0x6b, 0x7b, 0xf2, 0x7f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xca, 0x5b, 0x7e, 0xf2, 0xaf, 0x05, 0x00, 0x00,
}
